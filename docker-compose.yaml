services:
  pg:
    image: postgres:16
    restart: on-failure
    env_file:
      - .env
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
      - decklyvolume:/var/lib/postgresql/data
      - ./db/scripts:/docker-entrypoint-initdb.d/
    networks:
      - decklynetwork
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  deckly_api:
    build:
      context: .
      dockerfile: Dockerfile.dev
      args:
        API_PORT: ${API_PORT}
    depends_on:
      pg:
        condition: service_healthy
    volumes:
      - ./:/app
    ports:
      - "${API_PORT}:${API_PORT}"
    networks:
      - decklynetwork
    env_file:
      - .env
    entrypoint: ["/bin/bash", "./scripts/entrypoint.dev.sh"]
  n8n:
    image: docker.n8n.io/n8nio/n8n
    container_name: n8n
    ports:
      - "5678:5678"
    volumes:
      - n8n_data:/home/node/.n8n
    networks:
      - decklynetwork

volumes:
  decklyvolume:
    name: deckly-volume
  n8n_data: {}

networks:
  decklynetwork:
    name: deckly-network